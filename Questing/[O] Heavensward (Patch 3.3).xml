<?xml version="1.0" encoding="utf-8"?>
<!--
########################################
# Profile: [O] Heavensward (Patch 3.3) #
########################################
# Author: y2krazy                      #
########################################
# Version: 3.0.1                       #
########################################
# Required Level: 60                   #
########################################
# Required Setup:                      #
#  None                                #
########################################
# Required User Interaction:           #
#  2 Duty Finder Queues                #
########################################
-->
<Profile>
	<Name>[O] Heavensward (Patch 3.3) (v3.0.1)</Name>
	<BehaviorDirectory>../Quest Behaviors</BehaviorDirectory>
	<KillRadius>90</KillRadius>
	<Order>

    <BotSettings AutoEquip="1" />

    <If Condition="not IsQuestCompleted(67777)">
        <LogMessage Message="[Pre-Requisite Check] You haven't completed the Causes and Costs quest yet!" />
        <LogMessage Message="[Pre-Requisite Check] Loading the Heavensward (Patch 3.2) profile..." />
        <LoadProfile Path="[O] Heavensward (Patch 3.2).xml" />
    </If>

    <If Condition="(ClassName != ClassJobType.Astrologian) and (ClassName != ClassJobType.Bard) and (ClassName != ClassJobType.BlackMage) and (ClassName != ClassJobType.DarkKnight) and (ClassName != ClassJobType.Dragoon) and (ClassName != ClassJobType.Machinist) and (ClassName != ClassJobType.Monk) and (ClassName != ClassJobType.Ninja) and (ClassName != ClassJobType.Paladin) and (ClassName != ClassJobType.RedMage) and (ClassName != ClassJobType.Scholar) and (ClassName != ClassJobType.Samurai) and (ClassName != ClassJobType.Summoner) and (ClassName != ClassJobType.Warrior) and (ClassName != ClassJobType.WhiteMage)">
        <LogMessage Message="[Job Check] You do not have a job assigned on your character." />
        <LogMessage Message="[Job Check] Equipping your Soul Crystal now..." />
        <If Condition="ClassName == ClassJobType.Archer">
            <RunCode Name="EquipBRDCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Thaumaturge">
            <RunCode Name="EquipBLMCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Lancer">
            <RunCode Name="EquipDRGCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Pugilist">
            <RunCode Name="EquipMNKCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Rogue">
            <RunCode Name="EquipNINCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Gladiator">
            <RunCode Name="EquipPLDCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Arcanist">
            <RunCode Name="EquipSCHCrystal" />
            <WaitTimer WaitTime="3" />
            <RunCode Name="EquipSMNCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Marauder">
            <RunCode Name="EquipWARCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="ClassName == ClassJobType.Conjurer">
            <RunCode Name="EquipWHMCrystal" />
            <WaitTimer WaitTime="3" />
        </If>
        <If Condition="(ClassName != ClassJobType.Bard) and (ClassName != ClassJobType.BlackMage) and (ClassName != ClassJobType.Dragoon) and (ClassName != ClassJobType.Monk) and (ClassName != ClassJobType.Ninja) and (ClassName != ClassJobType.Paladin) and (ClassName != ClassJobType.Scholar) and (ClassName != ClassJobType.Summoner) and (ClassName != ClassJobType.Warrior) and (ClassName != ClassJobType.WhiteMage)">
            <LogMessage Message="[Job Check] You do not have the proper Soul Crystal in your Armoury or Inventory." />
            <LogMessage Message="[Job Check] Loading the Class and Job Quests profile..." />
            <LoadProfile Path="[O] Class and Job Quests.xml" />
        </If>
    </If>

    <!-- [PickupQuests] -->

    <!-- The Man Within -->
    <If Condition="not IsQuestCompleted(67778)">
        <If Condition="not HasQuest(67778)">
            <GetTo ZoneId="419" XYZ="15.91516, 15.96505, -0.2289429" /> <!-- House Fortemps Knight -->
            <If Condition="IsQuestAcceptQualified(67778)">
                <PickupQuest NpcId="1015596" QuestId="67778" XYZ="15.91516, 15.96505, -0.2289429" />
            </If>
        </If>
        <If Condition="HasQuest(67778)">
            <If Condition="GetQuestStep(67778) == 1">
                <If Condition="not IsOnMap(419) and not IsOnMap(433)">
                    <GetTo ZoneId="419" XYZ="17.99036, 16.00967, -9.567444" /> <!-- House Fortemps Guard -->
                </If>
                <If Condition="IsOnMap(419)">
                    <UseTransport Name="House Fortemps Guard" InteractDistance="3.0" NpcId="1011217" XYZ="17.99036, 16.00967, -9.567444" />
                </If>
                <MoveTo Name="Alphinaud" XYZ="0.7476196, 0.02225424, 4.623413" />
                <TalkTo NpcId="1012857" XYZ="0.7476196, 0.02225424, 4.623413" QuestId="67778" StepId="1" />
            </If>
            <If Condition="GetQuestStep(67778) == 2">
                <GetTo ZoneId="418" XYZ="92.85107, 15.00001, 38.25439" /> <!-- Krile -->
                <ExtendedTalkTo NpcId="1016807" XYZ="92.85107, 15.00001, 38.25439" QuestId="67778" StepId="2" />
            </If>
            <If Condition="GetQuestStep(67778) == 255">
                <GetTo ZoneId="418" XYZ="109.7275, 24.38438, -4.715088" /> <!-- Alphinaud -->
                <TurnIn QuestId="67778" NpcId="1016818" XYZ="109.7275, 24.38438, -4.715088" />
            </If>
        </If>
    </If>
    <!-- An Ally for Ishgard -->
    <If Condition="not IsQuestCompleted(67779)">
        <If Condition="not HasQuest(67779)">
            <GetTo ZoneId="418" XYZ="109.7275, 24.38438, -4.715088" /> <!-- Alphinaud -->
            <If Condition="IsQuestAcceptQualified(67779)">
                <PickupQuest NpcId="1016818" QuestId="67779" XYZ="109.7275, 24.38438, -4.715088" />
            </If>
        </If>
        <If Condition="HasQuest(67779)">
            <If Condition="GetQuestStep(67779) == 1">
                <GetTo ZoneId="418" XYZ="110.3074, 24.38672, -2.334717" /> <!-- Aymeric -->
                <TalkTo NpcId="1016881" XYZ="110.3074, 24.38672, -2.334717" QuestId="67779" StepId="1" />
            </If>
            <If Condition="GetQuestStep(67779) == 255">
                <GetTo ZoneId="398" XYZ="-285.6337, 39.04305, 53.72693" /> <!-- Vidofnir -->
                <TurnIn QuestId="67779" NpcId="1011935" XYZ="-285.6337, 39.04305, 53.72693" />
            </If>
        </If>
    </If>
    <!-- Winning Over the Wyrm -->
    <If Condition="not IsQuestCompleted(67780)">
        <If Condition="not HasQuest(67780)">
            <GetTo ZoneId="398" XYZ="-291.4321, 39.04307, 33.6156" /> <!-- Alphinaud -->
            <If Condition="IsQuestAcceptQualified(67780)">
                <PickupQuest NpcId="1016819" QuestId="67780" XYZ="-291.4321, 39.04307, 33.6156" />
            </If>
        </If>
        <If Condition="HasQuest(67780)">
            <If Condition="GetQuestStep(67780) == 1">
                <GetTo ZoneId="400" XYZ="234.5769, -42.66921, 615.2896" /> <!-- Aymeric -->
                <ExtendedTalkTo NpcId="1016811" XYZ="234.5769, -42.66921, 615.2896" QuestId="67780" StepId="1" />
            </If>
            <If Condition="GetQuestStep(67780) == 2">
                <GetTo ZoneId="400" XYZ="-758.3582, 123.7048, 214.5265" /> <!-- Destination -->
                <UseObject NpcId="2006956" XYZ="-758.3582, 123.7048, 214.5265" Radius="10" QuestId="67780" StepId="2" />
            </If>
            <If Condition="GetQuestStep(67780) == 3">
                <GetTo ZoneId="400" XYZ="-755.3063, 123.7287, 210.9559" /> <!-- Aymeric -->
                <TalkTo NpcId="1016813" XYZ="-755.3063, 123.7287, 210.9559" QuestId="67780" StepId="3" />
            </If>
            <If Condition="GetQuestStep(67780) == 4">
                <GetTo ZoneId="400" XYZ="-743.3127, 83.8, 267.689" /> <!-- Imperious Wyvern -->
                <TalkTo NpcId="1016812" XYZ="-743.3127, 83.8, 267.689" QuestId="67780" StepId="4" />
            </If>
            <If Condition="GetQuestStep(67780) == 5">
                <RunCode Name="Winning_Over_the_Wyrm" />
                <StopBot/>
            </If>
            <If Condition="GetQuestStep(67780) == 255">
                <GetTo ZoneId="400" XYZ="-758.3887, 123.7287, 210.7728" /> <!-- Alphinaud -->
                <TurnIn QuestId="67780" NpcId="1017011" XYZ="-758.3887, 123.7287, 210.7728" />
            </If>
        </If>
    </If>
    <!-- An End to the Song -->
    <If Condition="not IsQuestCompleted(67781)">
        <If Condition="not HasQuest(67781)">
            <GetTo ZoneId="400" XYZ="-755.3063, 123.7287, 210.9559" /> <!-- Aymeric -->
            <If Condition="IsQuestAcceptQualified(67781)">
                <PickupQuest NpcId="1016813" QuestId="67781" XYZ="-755.3063, 123.7287, 210.9559" />
            </If>
        </If>
        <If Condition="HasQuest(67781)">
            <If Condition="GetQuestStep(67781) == 2">
                <RunCode Name="An_End_to_the_Song" />
                <StopBot/>
            </If>
            <If Condition="GetQuestStep(67781) == 255">
                <GetTo ZoneId="418" XYZ="7.400574, 1.279123, 104.3563" /> <!-- Alphinaud -->
                <TurnIn QuestId="67781" NpcId="1016589" XYZ="7.400574, 1.279123, 104.3563" />
            </If>
        </If>
    </If>
    <!-- Heroes of the Hour -->
    <If Condition="not IsQuestCompleted(67782)">
        <If Condition="not HasQuest(67782)">
            <GetTo ZoneId="418" XYZ="7.400574, 1.279123, 104.3563" /> <!-- Alphinaud -->
            <If Condition="IsQuestAcceptQualified(67782)">
                <PickupQuest NpcId="1016589" QuestId="67782" XYZ="7.400574, 1.279123, 104.3563" />
            </If>
        </If>
        <If Condition="HasQuest(67782)">
            <If Condition="GetQuestStep(67782) == 1">
                <GetTo ZoneId="418" XYZ="110.0328, 24.38324, -6.485107" /> <!-- Lucia -->
                <TalkTo NpcId="1017024" XYZ="110.0328, 24.38324, -6.485107" QuestId="67782" StepId="1" />
            </If>
            <If Condition="GetQuestStep(67782) == 2">
                <If Condition="not IsOnMap(419) and not IsOnMap(433)">
                    <GetTo ZoneId="419" XYZ="17.99036, 16.00967, -9.567444" /> <!-- House Fortemps Guard -->
                </If>
                <If Condition="IsOnMap(419)">
                    <UseTransport Name="House Fortemps Guard" InteractDistance="3.0" NpcId="1011217" XYZ="17.99036, 16.00967, -9.567444" />
                </If>
                <WaitWhile Condition="GetQuestStep(67782) == 2" />
            </If>
            <If Condition="GetQuestStep(67782) == 255">
                <If Condition="not IsOnMap(418) and not IsOnMap(419) and not IsOnMap(433)">
                    <GetTo ZoneId="418" XYZ="124.4678, 24.45884, 0.4729614" />
                </If>
                <If Condition="IsOnMap(433)">
                    <UseTransport Name="Manor Exit" InteractDistance="2.5" NpcId="2005334" XYZ="-0.01531982, 1.144348, 13.19904" />
                </If>
                <GetTo ZoneId="418" XYZ="124.4678, 24.45884, 0.4729614" /> <!-- Aymeric -->
                <TurnIn QuestId="67782" NpcId="1012380" XYZ="124.4678, 24.45884, 0.4729614" />
            </If>
        </If>
    </If>
    <!-- Litany of Peace -->
    <If Condition="not IsQuestCompleted(67783)">
        <If Condition="not HasQuest(67783)">
            <GetTo ZoneId="418" XYZ="124.4678, 24.45884, 0.4729614" /> <!-- Aymeric -->
            <If Condition="IsQuestAcceptQualified(67783)">
                <PickupQuest NpcId="1012380" QuestId="67783" XYZ="124.4678, 24.45884, 0.4729614" />
            </If>
        </If>
        <If Condition="HasQuest(67783)">
            <If Condition="GetQuestStep(67783) == 1">
                <GetTo ZoneId="418" XYZ="124.834, 24.45884, 0.6256104" /> <!-- Aymeric -->
                <TalkToPlus NpcId="1016823" XYZ="124.834, 24.45884, 0.6256104" QuestId="67783" StepId="1" />
                <WaitWhile Condition="GetQuestStep(67783) == 1" />
            </If>
            <If Condition="GetQuestStep(67783) == 2">
                <GetTo ZoneId="419" XYZ="169.2683, -14.52896, 36.69788" /> <!-- Aymeric -->
                <TalkToPlus NpcId="1016828" XYZ="169.2683, -14.52896, 36.69788" QuestId="67783" StepId="2" />
            </If>
            <If Condition="GetQuestStep(67783) == 255">
                <If Condition="not IsOnMap(419) and not IsOnMap(433)">
                    <GetTo ZoneId="419" XYZ="17.99036, 16.00967, -9.567444" /> <!-- House Fortemps Guard -->
                </If>
                <If Condition="IsOnMap(419)">
                    <UseTransport Name="House Fortemps Guard" InteractDistance="3.0" NpcId="1011217" XYZ="17.99036, 16.00967, -9.567444" />
                </If>
                <MoveTo Name="Alphinaud" XYZ="0.7476196, 0.02225424, 4.623413" />
                <TurnIn QuestId="67783" NpcId="1012857" XYZ="0.7476196, 0.02225424, 4.623413" />
            </If>
        </If>
    </If>

    <If Condition="IsQuestCompleted(67783)">
        <LogMessage Message="[Heavensward (3.3)] You've completed the Heavensward (Patch 3.3) questline!" />
        <LogMessage Message="[Heavensward (3.3)] Loading the Heavensward (Patch 3.4) profile..." />
        <LoadProfile Path="[O] Heavensward (Patch 3.4).xml" />
    </If>

	</Order>
	<CodeChunks>

        <!-- Job Check -->

        <CodeChunk Name="EquipBRDCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4546)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipBLMCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4548)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipDRGCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4545)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipMNKCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4543)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipNINCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 7886)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipPLDCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4542)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipSCHCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4550)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipSMNCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4549)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipWARCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4544)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>
        <CodeChunk Name="EquipWHMCrystal">
            <![CDATA[ 
                await Coroutine.Sleep(1000);
                BagSlot EquipSlot = InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.SoulCrystal];

                foreach(BagSlot slot in InventoryManager.FilledInventoryAndArmory)
                {
                if(slot.RawItemId == 4547)
                {
                    slot.Move(EquipSlot);
                }
                }
                await Coroutine.Sleep(1000);
            ]]>
        </CodeChunk>

        <!-- Patch 3.3 -->

        <CodeChunk Name="Winning_Over_the_Wyrm">
            <![CDATA[ 
                while (ConditionParser.GetQuestStep(67780) == 5)
                {
                    System.Windows.Media.Color textColor = System.Windows.Media.Color.FromRgb(29,213,226);
                    System.Windows.Media.Color shadowColor = System.Windows.Media.Color.FromRgb(13,106,175);
                    Core.OverlayManager.AddToast(() => "[Heavensward (3.3)]\nPlease manually complete the Sohr Khai duty!", TimeSpan.FromMilliseconds(25000), textColor, shadowColor, new System.Windows.Media.FontFamily("Gautami"));
                    await Coroutine.Sleep(26000);
                }
        	]]>
        </CodeChunk>
        <CodeChunk Name="An_End_to_the_Song">
            <![CDATA[ 
                while (ConditionParser.GetQuestStep(67781) == 2)
                {
                    System.Windows.Media.Color textColor = System.Windows.Media.Color.FromRgb(29,213,226);
                    System.Windows.Media.Color shadowColor = System.Windows.Media.Color.FromRgb(13,106,175);
                    Core.OverlayManager.AddToast(() => "[Heavensward (3.3)]\nPlease manually complete The Final Steps of Faith duty!", TimeSpan.FromMilliseconds(25000), textColor, shadowColor, new System.Windows.Media.FontFamily("Gautami"));
                    await Coroutine.Sleep(26000);
                }
        	]]>
        </CodeChunk>
	</CodeChunks>
	<GrindAreas>
	</GrindAreas>
</Profile>